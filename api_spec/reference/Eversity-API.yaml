openapi: 3.1.0
info:
  title: Eversity JWT
  version: 0.9.0
  summary: Eversity Server API
  description: 'Eversity API. As every server is (at least now) self-hosted, there are no public test servers (however, some public mock servers are being thought of)'
  license:
    name: GNU AGPL-3.0
    identifier: AGPL-3.0-only
  contact:
    url: 'https://github.com/enrollie/Eversity-Server'
servers:
  - url: 'http://localhost:8081'
    description: Local test server
paths:
  /auth/login:
    post:
      summary: Log user in
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                  token:
                    type: string
              examples:
                Example token:
                  value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJFbnJvbGxpZS9FdmVyc2l0eUpXVCIsImlzcyI6IkVucm9sbGllLUV2ZXJzaXR5SldUIiwidXNlcklEIjoiMTMzNzY5IiwidG9rZW4iOiIzOGZjOGYxZC0wYWFiLTQ2NWQtYjI4Ni1kMGViZDFlYmJhNDMifQ.kAeoAX0Q7FeMegDOPAMiYcXPWjAnGcNVTI9MkTbLAGk
        '401':
          description: 'Returned, when Schools.by rejected user''s credentials'
        '503':
          description: 'Schools.by is unavailable, so authorization cannot happen'
          headers:
            Retry-After:
              schema:
                type: number
              description: Time in seconds until next retry is suggested
      description: Authenticates user with Schools.by credentials and issues Eversity JWT token
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        description: User's Schools.by credentials
      tags:
        - Auth
  /auth/tokens:
    parameters: []
    delete:
      summary: Invalidate all login tokens for current user
      operationId: delete-auth-tokens
      description: Invalidates all tokens (including one supplied with the request)
      responses:
        '200':
          description: All tokens are invalidated
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - Auth
  /auth/tokens/current:
    parameters: []
    delete:
      summary: Invalidate current login token for current user
      operationId: delete-auth-tokens-current
      responses:
        '200':
          description: Token invalidated
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: 'Invalidates token, supplied with the request (effectievly signs user out)'
      tags:
        - Auth
  '/auth/{userId}/tokens':
    get:
      summary: Get count of user's issued login tokens
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
              examples:
                Example:
                  value:
                    count: 12
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-tokens
      description: Gets count of user's tokens.
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          minimum: -1
        description: ID of user. (-1) evaluates to "Current user"
    delete:
      summary: Invalidate all user's login tokens
      operationId: delete-auth-userId-tokens
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      description: Invalidates user's tokens
      parameters: []
      tags:
        - Auth
  '/user/{userId}':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          minimum: -1
        description: ID of user. (-1) evaluates to "Current user"
    get:
      summary: Get User Info by User ID
      tags:
        - User
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Administration user info:
                  value:
                    id: 12753
                    type: Administration
                    firstName: Степан
                    middleName: Андреевич
                    lastName: Стэтхем
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
  '/users/{userId}/class':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get user's class if present
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  class:
                    oneOf:
                      - $ref: '#/components/schemas/Class'
                      - type: 'null'
                        properties: {}
                  role:
                    type:
                      - string
                      - 'null'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId-class
      description: 'If user persistently belongs to class (doesn''t matter: Pupil or class teacher) will respond with user''s class'
  '/user/{userId}/timetable':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          minimum: -1
        description: ID of user. (-1) evaluates to "Current user"
    get:
      summary: Get user timetable
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId-timetable
      description: Returns full-week user timetable
      parameters: []
  '/user/{userId}/timetable/today':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          minimum: -1
        description: ID of user. (-1) evaluates to "Current user"
    get:
      summary: Get user timetable for request date
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first:
                    type:
                      - array
                      - 'null'
                    items:
                      $ref: '#/components/schemas/Lesson-data'
                  second:
                    type:
                      - array
                      - 'null'
                    items:
                      $ref: '#/components/schemas/Lesson-data'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId-timetable-by-date
      description: Returns user timetable for request date
      parameters: []
  '/user/{userId}/timetable/today/current':
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          minimum: -1
        description: ID of user. (-1) evaluates to "Current user"
    get:
      summary: Get user's current lesson
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  lesson:
                    oneOf:
                      - $ref: '#/components/schemas/Lesson-data'
                      - type: 'null'
                        properties: {}
              examples:
                Lesson:
                  value:
                    place: 5
                    title: Всемир. ист.
                    schedule:
                      startH: 13
                      startM: 0
                      endH: 13
                      endM: 45
                    classID: 26215
                No lesson:
                  value:
                    lesson: null
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId-timetable-current
      description: 'Returns current lesson for requested user. If user does not have any lessons right now, endpoint will return null.'
  '/user/{userId}/integrations':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get all user integrations
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    integrationId:
                      type: string
                    publicName:
                      type: string
                    connected:
                      type: boolean
              examples:
                example-1:
                  value:
                    - integrationId: Telegram-912
                      publicName: Telegram Parent integration
                      connected: true
        '201':
          $ref: '#/components/responses/User-not-found'
        '404':
          $ref: '#/components/responses/User-not-found'
      operationId: get-users-userId-integrations
      description: 'Returns all user integrations with other services (i.e. Telegram), including not connected, but available'
    put:
      summary: Add new user integration
      operationId: put-user-userId-integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  integrationType:
                    type: string
                  pairData:
                    type: object
                    description: 'Pair data, requested by integration. Since different integrations have different pairing process, there is no standard defined data-schema. Please, see integration docs for defined schema'
        '400':
          description: Integration does not exist
        '404':
          $ref: '#/components/responses/User-not-found'
        '409':
          description: Integration is already connected
      description: Create integration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integrationId:
                  type: string
        description: Creates new integration
      tags:
        - User
    delete:
      summary: Delete user integration
      operationId: delete-user-userId-integrations
      responses:
        '202':
          description: 'Accepted for processing. Integration removal is scheduled, but may not be removed immediately.'
        '400':
          description: Integration does not exist or it's not connected
        '404':
          $ref: '#/components/responses/User-not-found'
      description: Deletes an integration from user account
      tags:
        - User
      parameters:
        - schema:
            type: string
          in: query
          name: integrationId
          description: ID of integration to delete
          required: true
  '/class/{classId}':
    parameters:
      - $ref: '#/components/parameters/classId'
    get:
      summary: Get class data by ID
      tags:
        - Class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
              examples:
                Example:
                  value:
                    id: 133769
                    title: 1 "А"
                    isSecondShift: false
                    pupilCount: 31
                    classTeacherId: 69420
                    classTeacherName: Стэтхэм Джейсон Альбертович
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Class-not-found'
      operationId: get-classes-classId
      description: Returns class data
  '/class/{classId}/absence':
    parameters:
      - name: classId
        in: path
        required: true
        schema:
          type: integer
        description: Class ID
    get:
      summary: Get class's absence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 'Pair of (Pupil, absenceList)'
                  properties:
                    pupil:
                      $ref: '#/components/schemas/User'
                    absences:
                      type: array
                      items:
                        $ref: '#/components/schemas/Absence'
              examples:
                example-1:
                  value:
                    - pupil:
                        id: 124
                        type: PUPIL
                        firstName: Степан
                        middleName: Андреевич
                        lastName: Стэтхем
                        classID: null
                      absences:
                        - pupilId: 0
                          classId: 0
                          date: '2019-08-24'
                          reason: ILLNESS
                          lessonsList:
                            - 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Class-not-found'
      operationId: get-classes-classId-absence
      description: Gets absences summary for range of given dates (defaults to request date week)
      parameters:
        - schema:
            type: string
            format: date
            pattern: '([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))'
          in: query
          name: startDate
          allowEmptyValue: true
          description: Range begin date in YYYY-MM-dd format
          style: form
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Range end date in YYYY-MM-dd format
          style: form
      tags:
        - Class
        - Absence
    post:
      summary: Send absence data
      operationId: post-class-classId-absence
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/Class-not-found'
      description: |-
        Send absence data. Please, see docs/absence.md for absence accounting process.

        **Note:** on absence data POST field 'sentBy' will be ignored by the server.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Absence'
              writeOnly: true
            examples:
              example-1:
                value:
                  - pupilId: 219275
                    date: '2019-08-24'
                    reason: ILLNESS
                    lessonsList:
                      - 0
                    note:
                      type: ADDITIONAL_DATA
                      note:
                        type: ADDITIONAL_DATA
                        didLeaveAftermath: false
        description: ''
      tags:
        - Absence
        - Class
  '/class/{classId}/absence/{date}':
    parameters:
      - $ref: '#/components/parameters/classId'
      - schema:
          type: string
          format: date
        name: date
        in: path
        required: true
    get:
      summary: Get absence data for specific date
      tags:
        - Absence
        - Class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Absence'
        '404':
          $ref: '#/components/responses/Class-not-found'
      operationId: get-class-classId-absence-date
      description: Gets absence for only one given date
  '/class/{classId}/pupils':
    parameters:
      - schema:
          type: string
        name: classId
        in: path
        required: true
    get:
      summary: Get list of pupils in class
      tags:
        - Class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: get-class-classId-pupils
      description: Returns class pupils list
  '/class/{classId}/timetable':
    parameters:
      - $ref: '#/components/parameters/classId'
    get:
      summary: Get class's timetable
      tags:
        - Class
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timetable'
      operationId: get-classes-classId-pupils
      description: Returns class timetable
  '/class/{classId}/timetable/today':
    parameters:
      - schema:
          type: string
        name: classId
        in: path
        required: true
    get:
      summary: Get class's timetable for request date
      tags:
        - Class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lesson-data'
                  second:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lesson-data'
      operationId: get-class-classId-timetable-today
      description: Returns timetable for request date (counted from server's timezone)
  '/class/{classId}/timetable/today/current':
    parameters:
      - schema:
          type: string
        name: classId
        in: path
        required: true
    get:
      summary: Get current class's lesson
      tags:
        - Class
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  serverTime:
                    type: string
                    format: date-time
                  lesson:
                    oneOf:
                      - $ref: '#/components/schemas/Lesson-data'
                      - type: 'null'
                        properties: {}
              examples: {}
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Class-not-found'
      operationId: get-class-classId-timetable-today-current
      description: Returns current lesson (based on server's timezone)
  /absence/noData:
    get:
      summary: Get list of classes without absence data
      tags:
        - Absence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-absence-noData
      description: 'Returns list of classes, that did not send absence data by time of the request'
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: date
          description: Return response for given date
  /absence/statistics:
    get:
      summary: Get school-wide absence statistics
      tags:
        - Absence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    pupilCount:
                      first: 0
                      second: 0
                    absenceStatistics:
                      first:
                        ILLNESS: 0
                        HEALING: 0
                        REQUEST: 0
                        COMPETITION: 0
                        UNKNOWN: 0
                      second:
                        ILLNESS: 0
                        HEALING: 0
                        REQUEST: 0
                        COMPETITION: 0
                        UNKNOWN: 0
                properties:
                  pupilCount:
                    type: object
                    required:
                      - first
                      - second
                    description: 'Count of pupils in whole school, broke down by shifts'
                    properties:
                      first:
                        type: integer
                      second:
                        type: integer
                  absenceStatistics:
                    type: object
                    required:
                      - first
                      - second
                    description: Summary of absence statistics broke down by shifts
                    properties:
                      first:
                        type: object
                        properties:
                          ILLNESS:
                            type: integer
                          HEALING:
                            type: integer
                          REQUEST:
                            type: integer
                          COMPETITION:
                            type: integer
                          UNKNOWN:
                            type: integer
                      second:
                        type: object
                        required:
                          - ILLNESS
                          - HEALING
                          - REQUEST
                          - COMPETITION
                          - UNKNOWN
                        properties:
                          ILLNESS:
                            type: integer
                          HEALING:
                            type: integer
                          REQUEST:
                            type: integer
                          COMPETITION:
                            type: integer
                          UNKNOWN:
                            type: integer
                required:
                  - pupilCount
                  - absenceStatistics
              examples:
                Example:
                  value:
                    pupilCount:
                      first: 10
                      second: 0
                    absenceStatistics:
                      first:
                        ILLNESS: 1
                        HEALING: 1
                        REQUEST: 1
                        COMPETITION: 1
                        UNKNOWN: 5
                      second:
                        ILLNESS: 0
                        HEALING: 0
                        REQUEST: 0
                        COMPETITION: 0
                        UNKNOWN: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-absence-statistics
      description: Returns current whole school absence statistics summary by shifts and by reasons.
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: date
          description: Return absence data for given date
  /absence/statistics/detailed:
    get:
      summary: Get detailed absence data
      tags:
        - Absence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    firstName:
                      type: string
                    middleName:
                      type:
                        - string
                        - 'null'
                    lastName:
                      type: string
                    absenceReason:
                      $ref: '#/components/schemas/Absence-reason'
                    classId:
                      type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-absence-statistics-extended
      description: Returns detailed absence statistics with data on every absent pupil
      parameters:
        - schema:
            type: string
          in: query
          name: date
          description: Return data for given date
    parameters: []
  /templating/generate:
    get:
      summary: Generate template and fill it with data
      tags:
        - Templating
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  validFor:
                    type: integer
                    description: 'Represents how long will generated document will stay available on server, in seconds'
                  downloadLink:
                    type: string
                    format: uri
                    description: Download link for newly-generated document
                  title:
                    type: string
                    description: 'Represents document''s real title, not garbage in link'
              examples:
                Example:
                  value:
                    validFor: 20
                    downloadLink: 'https://example.com/ihjnduwer234isertdfslfs9o3rji23dkfsk8svi28392skksdfsr.docx'
                    title: Eversity Statistics for 2022-01-01.docx
      operationId: get-templating-generate
      description: Populates requested template with data
      parameters:
        - schema:
            type: string
            enum:
              - schoolAbsenceReport
              - classAbsenceReport
          in: query
          name: type
          required: true
          description: Defines what query parameters are needed and what query parameters are needed
        - schema:
            type: string
            format: date
          in: query
          name: date
          description: Represents date to get data for. Required for schoolWideAbsence
        - schema:
            type: string
          in: query
          name: firstDate
          description: 'Represents first date from range of [firstDate. lastDate] to date be gotten for. Needed for classAbsenceReport'
        - schema:
            type: string
          in: query
          name: lastDate
          description: 'Represents last date from range of [firstDate. lastDate] to date be gotten for. Needed for classAbsenceReport'
        - schema:
            type: string
          in: query
          name: classId
          description: Represents class ID for data to be gotten for. Required for classAbsenceReport
  /school:
    get:
      summary: Returns data about school
      tags:
        - School
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  serverVersion:
                    type: string
                  localTime:
                    type: string
                    format: date-time
                  schoolWebsite:
                    type: string
                    format: uri
                  statistics:
                    type: object
                    properties:
                      usersCount:
                        type: integer
                      classesCount:
                        type: integer
      operationId: get-school
      description: Returns basic data about school
      security: []
  /school/classes:
    get:
      summary: Get list of classes
      tags:
        - School
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
              examples: {}
      operationId: get-school-classes
      description: 'Returns list of classes, registered in school'
components:
  schemas:
    User:
      description: 'User datascheme. Middle name is null for everyone except Teacher, Administration, and Social type.'
      type: object
      x-examples:
        example-1:
          id: '652966'
          type: Administration
          firstName: Татьяна
          middleName: Михайловна
          lastName: Ширяева
      examples:
        - id: 12753
          type: TEACHER
          firstName: Степан
          middleName: Андреевич
          lastName: Стэтхем
          classID: null
        - id: 123
          type: PUPIL
          firstName: Андрей
          middleName: null
          lastName: Панин
          classID: 13372
        - id: 1111
          type: PARENT
          firstName: Андрей
          middleName: Андреевич
          lastName: Стэтхем
          classID: null
      properties:
        id:
          type: integer
        type:
          $ref: '#/components/schemas/User-Type'
        firstName:
          type: string
          minLength: 1
        middleName:
          type:
            - string
            - 'null'
          minLength: 1
        lastName:
          type: string
          minLength: 1
        classId:
          type:
            - integer
            - 'null'
          description: May be absent from some outputs of server
          readOnly: true
      required:
        - id
        - type
        - firstName
        - middleName
        - lastName
    Timetable:
      description: Contains timetables for each of two shifts
      type: object
      x-examples:
        example-1:
          first:
            MONDAY:
              - place: 1
                title: Ист. Бел.
                schedule:
                  startH: 9
                  startM: 0
                  endH: 9
                  endM: 45
                classID: 26516
              - place: 2
                title: Ист. Бел.
                schedule:
                  startH: 10
                  startM: 0
                  endH: 10
                  endM: 45
                classID: 26517
              - place: 5
                title: Ист. Бел.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26216
              - place: 6
                title: Ист. Бел.
                schedule:
                  startH: 13
                  startM: 55
                  endH: 14
                  endM: 40
                classID: 26215
            TUESDAY:
              - place: 0
                title: Кл. час
                schedule:
                  startH: 8
                  startM: 30
                  endH: 8
                  endM: 55
                classID: 26517
              - place: 1
                title: Ист. Бел.
                schedule:
                  startH: 9
                  startM: 0
                  endH: 9
                  endM: 45
                classID: 26518
              - place: 2
                title: Ист. Бел.
                schedule:
                  startH: 10
                  startM: 0
                  endH: 10
                  endM: 45
                classID: 26519
              - place: 4
                title: Ист. Бел.
                schedule:
                  startH: 12
                  startM: 0
                  endH: 12
                  endM: 45
                classID: 24268
              - place: 5
                title: Ист. Бел.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 24267
              - place: 6
                title: Ист. Бел.
                schedule:
                  startH: 13
                  startM: 55
                  endH: 14
                  endM: 40
                classID: 26520
              - place: 7
                title: Ист. Бел.
                schedule:
                  startH: 14
                  startM: 55
                  endH: 15
                  endM: 40
                classID: 26522
            WEDNESDAY:
              - place: 5
                title: Ист. Бел.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26521
              - place: 6
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 55
                  endH: 14
                  endM: 40
                classID: 24264
              - place: 7
                title: Всемир. ист.
                schedule:
                  startH: 14
                  startM: 55
                  endH: 15
                  endM: 40
                classID: 24268
            THURSDAY:
              - place: 0
                title: Информ. час
                schedule:
                  startH: 8
                  startM: 30
                  endH: 8
                  endM: 55
                classID: 26517
              - place: 2
                title: Всемир. ист.
                schedule:
                  startH: 10
                  startM: 0
                  endH: 10
                  endM: 45
                classID: 26519
              - place: 3
                title: Всемир. ист.
                schedule:
                  startH: 11
                  startM: 0
                  endH: 11
                  endM: 45
                classID: 26520
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26522
              - place: 6
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 55
                  endH: 14
                  endM: 40
                classID: 26521
            FRIDAY:
              - place: 1
                title: Всемир. ист.
                schedule:
                  startH: 9
                  startM: 0
                  endH: 9
                  endM: 45
                classID: 26517
              - place: 2
                title: Всемир. ист.
                schedule:
                  startH: 10
                  startM: 0
                  endH: 10
                  endM: 45
                classID: 26216
              - place: 3
                title: Всемир. ист.
                schedule:
                  startH: 11
                  startM: 0
                  endH: 11
                  endM: 45
                classID: 26518
              - place: 4
                title: Всемир. ист.
                schedule:
                  startH: 12
                  startM: 0
                  endH: 12
                  endM: 45
                classID: 26516
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
              - place: 6
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 55
                  endH: 14
                  endM: 40
                classID: 24267
            SATURDAY: []
          second: null
      examples:
        - MONDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 2
                title: Всемир. ист.
                schedule:
                  startH: 16
                  startM: 0
                  endH: 16
                  endM: 45
                classID: 26215
          TUESDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 2
                title: Всемир. ист.
                schedule:
                  startH: 16
                  startM: 0
                  endH: 16
                  endM: 45
                classID: 26215
          WEDNESDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
          THURSDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
          FRIDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
          SATURDAY:
            first:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
            second:
              - place: 5
                title: Всемир. ист.
                schedule:
                  startH: 13
                  startM: 0
                  endH: 13
                  endM: 45
                classID: 26215
      title: Timetable
      properties:
        MONDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
        TUESDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
        WEDNESDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
        THURSDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
        FRIDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
        SATURDAY:
          type: object
          properties:
            first:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
            second:
              type:
                - array
                - 'null'
              items:
                $ref: '#/components/schemas/Lesson-data'
      required:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
    Lesson-data:
      description: Describes lesson.
      type: object
      x-examples:
        example-1:
          place: 5
          title: Всемир. ист.
          schedule:
            startH: 13
            startM: 0
            endH: 13
            endM: 45
          classID: 26215
      examples:
        - place: 5
          title: Всемир. ист.
          schedule:
            startH: 13
            startM: 0
            endH: 13
            endM: 45
          classID: 26215
        - place: 2
          title: Информ.
          schedule:
            startH: 16
            startM: 0
            endH: 16
            endM: 45
          classID: 26215
      title: Lesson data
      properties:
        place:
          type: integer
        title:
          type: string
          minLength: 1
        classID:
          type: number
        schedule:
          $ref: '#/components/schemas/Schedule'
      required:
        - place
        - title
        - classID
        - schedule
    Error:
      title: Error
      type: object
      properties:
        errorCode:
          type: string
        additionalInfo:
          type:
            - string
            - 'null'
      examples:
        - errorCode: USER_NOT_FOUND
          additionalInfo: User with ID 69420 was not found
        - errorCode: SCHOOLS_BY_UNAVAILABLE
          additionalInfo: 'Schools.by is unavailable, so server cannot process this request'
        - errorCode: NO_TOKEN
          additionalInfo: No valid token was supplied
      description: Describes error to client
    Schedule:
      description: ''
      type: object
      properties:
        startH:
          type: number
        startM:
          type: number
        endH:
          type: number
        endM:
          type: number
      required:
        - startH
        - startM
        - endH
        - endM
      x-examples:
        example-1:
          startH: 13
          startM: 0
          endH: 13
          endM: 45
      title: Schedule
    Class:
      title: Class
      type: object
      description: Defines most basic class data
      examples:
        - id: 133769
          title: 1 "А"
          isSecondShift: false
          pupilCount: 31
          classTeacherId: 69420
          classTeacherName: Стэтхэм Джейсон Альбертович
      properties:
        id:
          type: integer
        title:
          type: string
        isSecondShift:
          type: boolean
        pupilCount:
          type: integer
        classTeacherId:
          type: integer
        classTeacherName:
          type: string
      required:
        - id
        - title
        - isSecondShift
        - pupilCount
        - classTeacherId
        - classTeacherName
    Absence:
      title: Absence
      type: object
      description: Describes absence info
      examples:
        - pupilId: 219275
          classId: 26216
          sentBy: 111
          date: '2019-08-24'
          reason: ILLNESS
          lessonsList:
            - 0
          note:
            type: TextAbsenceNite
            note:
              message: uwu
      properties:
        pupilId:
          type: integer
        classId:
          type: integer
          readOnly: true
        sentBy:
          type:
            - integer
            - 'null'
          readOnly: true
        date:
          type: string
          format: date
          description: Cannot be Sunday due to internal descisions
        reason:
          $ref: '#/components/schemas/Absence-reason'
        lessonsList:
          type: array
          items:
            type: integer
        lastEditTimestamp:
          type: integer
          format: int64
          minimum: 0
          example: Timestamp of last data edit
          readOnly: true
        note:
          oneOf:
            - $ref: '#/components/schemas/Absence-note'
            - type: 'null'
            - {}
      required:
        - pupilId
        - date
        - reason
        - lessonsList
        - note
    Absence-reason:
      type: string
      title: Absence-reason
      enum:
        - ILLNESS
        - HEALING
        - REQUEST
        - COMPETITION
        - UNKNOWN
        - DUMMY
      examples:
        - ILLNESS
      description: Reason of pupil's absence
    Date:
      type: string
      title: Date
      description: Date
      pattern: '([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))'
      format: date
      examples:
        - '2019-08-24'
    User-Type:
      type: string
      title: User-Type
      enum:
        - PUPIL
        - PARENT
        - TEACHER
        - SYSTEM
        - ADMINISTRATION
      examples:
        - PUPIL
      description: ''
      readOnly: true
    Absence-note:
      title: Absence-note
      type: object
      description: Additional data used to make some details about student absence clearer
      examples:
        - type: TEXT
          note:
            message: Left because of sick in stomach
        - type: TEXT
          note:
            message: PLS ask on the next lesson
        - type: ADDITIONAL_DATA
          note:
            leftAftermath: true
      properties:
        type:
          type: string
          enum:
            - TEXT
            - ADDITIONAL_DATA
        note:
          oneOf:
            - $ref: '#/components/schemas/Text-Absence-Note'
            - $ref: '#/components/schemas/Additional-Data-Absence-Note'
      required:
        - type
        - note
    Text-Absence-Note:
      title: Text-Absence-Note
      type: object
      description: 'Absence note, containing only custom message'
      properties:
        type:
          type: string
          enum:
            - TEXT
          pattern: TYPE
        message:
          type: string
      required:
        - message
    Additional-Data-Absence-Note:
      title: Additional-Data-Absence-Note
      type: object
      description: Additional data regarding pupil absence
      properties:
        type:
          type: string
          enum:
            - ADDITIONAL_DATA
          pattern: ADDITIONAL_DATA
        didLeaveAftermath:
          type:
            - boolean
            - 'null'
          default: null
      examples:
        - type: ADDITIONAL_DATA
          didLeaveAftermath: null
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
  responses:
    Unauthorized:
      description: Supplied token was not approved by server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            No token were supplied:
              value:
                errorCode: NO_TOKEN
                additionalInfo: No valid token were supplied
            Token was invalidated:
              value:
                errorCode: TOKEN_INVALIDATED
                additionalInfo: USER_REQUEST
    User-not-found:
      description: User is not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            User not found:
              value:
                errorCode: USER_NOT_FOUND
                additionalInfo: User with ID 69420 was not found
            Class not found:
              value:
                errorCode: CLASS_NOT_FOUND
                additionalInfo: Class with ID 69420 was not found
    Class-not-found:
      description: Class not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Class not found:
              value:
                errorCode: CLASS_NOT_FOUND
                additionalInfo: Class with ID 69420 was not found
  requestBodies: {}
  examples: {}
  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: integer
        minimum: -1
      description: ID of user. (-1) evaluates to "Current user"
    classId:
      name: classId
      in: path
      required: true
      schema:
        type: integer
      description: Class ID
security:
  - JWT: []
